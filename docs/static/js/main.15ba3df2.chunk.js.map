{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","cats","onSubmit","type","value","onChange","target","className","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"4NAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAO1CC,EAAe,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAIlB,OACE,0BAAMO,SAAUN,GACd,2BACEO,KAAK,OACLC,MAAOV,EACPW,SAjBoB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,QAiBnBG,UAAU,cAEZ,4BAAQA,UAAU,UAAUL,SAAUN,GAAtC,c,uBC3BOY,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAedM,GAfc,4CAAH,sDCKPO,G,KAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,yBAAKJ,UAAU,oEACb,yBAAKkB,IAAKd,EAAKe,IAAKL,EAAOd,UAAU,UACrC,uBAAGA,UAAU,SAASc,MCDfM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECLb,SAACA,GAAc,IAAD,EACdhB,mBAAS,CACjCuB,KAAM,GACNY,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAACC,GACtBH,EAAS,CACPd,KAAMiB,EACNL,SAAS,SAIZ,IAEIC,EDV2BK,CAAazB,GAAjCa,EADyB,EAC/BN,KAAcY,EADiB,EACjBA,QAEtB,OACE,yBAAKrB,UAAU,wCACb,wBAAIA,UAAU,SAASE,GAEtBmB,GACC,uBAAGrB,UAAU,6CAAb,cAGF,yBAAKA,UAAU,aACZe,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAagB,IAAKhB,EAAIC,IAAQD,UEIzBiB,EAhBM,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IACf5C,mBAAS4C,GADM,mBAC5CC,EAD4C,KAChC9C,EADgC,KAGnD,OACE,oCACE,wBAAIe,UAAU,YAAd,4BACA,kBAAC,EAAD,CAAaf,cAAeA,IAC5B,4BACG8C,EAAWpB,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAASA,SAAUA,EAAU0B,IAAK1B,UCb5C8B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.15ba3df2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"nes.css/css/nes.min.css\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\"); // ''\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        className=\"nes-input\"\n      />\n      <button className=\"nes-btn\" onSubmit={handleSubmit}>\n        Ver Gifs\n      </button>\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=3KXMQCXYoXN4erae4t5ZIGl9KPyfTMf0`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../index.css\";\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn nes-container is-rounded \">\n      <img src={url} alt={title} className=\"image\" />\n      <p className=\"title\">{title}</p>\n    </div>\n  );\n};\n\nGifGridItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"../components/GifGridItem.js\";\n\nimport \"../index.css\";\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <div className=\"nes-container with-title is-centered\">\n      <h3 className=\"title\">{category}</h3>\n\n      {loading && (\n        <p className=\"animate__animated animate__flash nes-text\">Loading...</p>\n      )}\n\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  return state;\n};\n","import React, { useState } from \"react\";\n\nimport \"nes.css/css/nes.min.css\";\n\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nimport \"./index.css\";\n\nconst GifExpertApp = ({ defaultCategories = [] }) => {\n  const [categories, setCategories] = useState(defaultCategories);\n\n  return (\n    <>\n      <h2 className=\"nes-text\">Busca tus Gifs favoritos</h2>\n      <AddCategory setCategories={setCategories} />\n      <ul>\n        {categories.map((category) => (\n          <GifGrid category={category} key={category} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}